{"version":3,"sources":["components/how-to/HowTo.js","tools/encrypt.js","components/youtube-embed/YoutubeEmbed.js","tools/rickroll.js","tools/random-picker.js","App.js","reportWebVitals.js","index.js"],"names":["HowTo","content","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","variant","onClick","event","currentTarget","color","Popover","onClose","anchorOrigin","vertical","horizontal","Box","sx","p","Encrypt","props","handleChange","e","setState","target","name","value","handleEncrypt","encrypted","CryptoJS","AES","encrypt","state","text","key","toString","handleDecrypt","decrypt","enc","Utf8","Stack","spacing","TextField","label","this","onChange","multiline","fullWidth","minRows","maxRows","direction","justifyContent","Typography","Component","YoutubeEmbed","embedId","className","width","height","src","frameBorder","allow","allowFullScreen","title","RickRoll","autoplay","List","list","Grid","container","map","item","index","Chip","ItemInput","onEnter","setValue","onKeyDown","ClearButton","ShuffleButton","PickedItem","size","style","textTransform","RandomPicker","setList","picked","setPicked","sort","Math","random","slice","concat","filter","_","i","array","floor","length","App","expanded","setExpanded","makeTool","tool","Accordion","TransitionProps","unmountOnExit","panel","isExpanded","AccordionSummary","expandIcon","AccordionDetails","mode","setMode","theme","createTheme","palette","ThemeProvider","Paper","minHeight","AppBar","position","Toolbar","mr","component","flexGrow","IconButton","ml","Container","mt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95685715.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nexport default function HowTo({content}) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'how-to' : undefined;\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                aria-describedby={id}\r\n                variant=\"text\"\r\n                onClick={handleClick}\r\n                color=\"info\"\r\n            >\r\n                HOW TO USE\r\n            </Button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <Box sx={{p: 1}}>\r\n                    {content}\r\n                </Box>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}","import TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport React from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport HowTo from \"../components/how-to/HowTo\";\r\n\r\n\r\nexport default class Encrypt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n            key: '',\r\n            encrypted: '',\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleEncrypt = () => {\r\n        this.setState({\r\n            encrypted: CryptoJS.AES.encrypt(this.state.text, this.state.key).toString()\r\n        });\r\n    }\r\n\r\n    handleDecrypt = () => {\r\n        this.setState({\r\n            text: CryptoJS.AES.decrypt(this.state.encrypted, this.state.key).toString(CryptoJS.enc.Utf8)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Stack spacing={2}>\r\n                <TextField\r\n                    name=\"key\"\r\n                    label=\"Key\"\r\n                    value={this.state.key}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <TextField\r\n                    name=\"text\"\r\n                    label=\"Text (Decrypted)\"\r\n                    value={this.state.text}\r\n                    onChange={this.handleChange}\r\n                    multiline\r\n                    fullWidth\r\n                    minRows={4}\r\n                    maxRows={10}\r\n                />\r\n                <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleEncrypt}\r\n                    >\r\n                        <ArrowDownwardIcon/>\r\n                        Encrypt\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleDecrypt}\r\n                    >\r\n                        <ArrowUpwardIcon/>\r\n                        Decrypt\r\n                    </Button>\r\n                </Stack>\r\n                <TextField\r\n                    name=\"encrypted\"\r\n                    label=\"Encrypted\"\r\n                    value={this.state.encrypted}\r\n                    onChange={this.handleChange}\r\n                    multiline\r\n                    fullWidth\r\n                    minRows={4}\r\n                    maxRows={10}\r\n                />\r\n                <HowTo content={(\r\n                    <div>\r\n                        <Typography>\r\n                            This tool is used to encrypt and decrypt text using AES.\r\n                        </Typography>\r\n                        <Typography>\r\n                            The key is used to both encrypt and decrypt the text.\r\n                        </Typography>\r\n                        <Typography>\r\n                            To encrypt, enter the text and the key and click the ENCRYPT button.\r\n                        </Typography>\r\n                        <Typography>\r\n                            To decrypt, enter the encrypted text and the key and click the DECRYPT button.\r\n                        </Typography>\r\n                    </div>\r\n                )}/>\r\n            </Stack>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.css\";\r\n\r\nconst YoutubeEmbed = ({embedId}) => (\r\n    <div className=\"video-responsive\">\r\n        <iframe\r\n            width=\"853\"\r\n            height=\"480\"\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n        />\r\n    </div>\r\n);\r\n\r\nYoutubeEmbed.propTypes = {\r\n    embedId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default YoutubeEmbed;\r\n","import YoutubeEmbed from \"../components/youtube-embed/YoutubeEmbed\";\r\n\r\n\r\nexport default function RickRoll() {\r\n    return (<YoutubeEmbed embedId=\"dQw4w9WgXcQ?&autoplay=1\" autoplay/>);\r\n}\r\n","import Stack from \"@mui/material/Stack\";\r\nimport React from 'react';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Chip from \"@mui/material/Chip\";\r\nimport ShuffleIcon from '@mui/icons-material/Shuffle';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport HowTo from \"../components/how-to/HowTo\";\r\n\r\n\r\nfunction List({list, onClick}) {\r\n    return (\r\n        <Grid container spacing={1}>\r\n            {list.map((item, index) => (\r\n                <Grid item>\r\n                    <Chip\r\n                        key={index}\r\n                        label={item}\r\n                        onClick={() => onClick(index)}\r\n                    />\r\n\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction ItemInput({onEnter}) {\r\n    const [value, setValue] = React.useState('');\r\n    const handleChange = (e) => setValue(e.target.value);\r\n    const handleKeyDown = (e) => {\r\n        if (value === '') return;\r\n\r\n        if (e.key === 'Enter') {\r\n            onEnter(value);\r\n            setValue('');\r\n        }\r\n    };\r\n    return (\r\n        <TextField\r\n            label=\"New item\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            onKeyDown={handleKeyDown}\r\n        />\r\n    );\r\n}\r\n\r\nfunction ClearButton({onClick}) {\r\n    return (\r\n        <Button\r\n            onClick={onClick}\r\n            variant=\"contained\"\r\n            color=\"warning\"\r\n        >\r\n            <DeleteIcon/>\r\n            CLEAR\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction ShuffleButton({onClick}) {\r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            onClick={onClick}\r\n            color=\"secondary\"\r\n        >\r\n            <ShuffleIcon/>\r\n            SHUFFLE\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction PickedItem({item, onClick}) {\r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            fullWidth\r\n            onClick={onClick}\r\n            size=\"large\"\r\n            style={{textTransform: \"none\"}}\r\n        >\r\n            {item}\r\n        </Button>\r\n    );\r\n}\r\n\r\nfunction RandomPicker() {\r\n    function pickRandom(array) {\r\n        return array[Math.floor(Math.random() * array.length)];\r\n    }\r\n\r\n    const [list, setList] = React.useState([]);\r\n    const [picked, setPicked] = React.useState(null);\r\n\r\n    function handleAdd(item) {\r\n        setList(list.concat(item));\r\n    }\r\n\r\n    function handleRemove(index) {\r\n        setList(list.filter((_, i) => i !== index));\r\n    }\r\n\r\n    function handleClear() {\r\n        setList([]);\r\n        setPicked(null);\r\n    }\r\n\r\n    function handlePick() {\r\n        setPicked(pickRandom(list));\r\n    }\r\n\r\n    function handleShuffle() {\r\n        setList(list.sort(() => Math.random() - 0.5).slice());\r\n    }\r\n\r\n    return (\r\n        <Stack spacing={2}>\r\n            <Stack spacing={2} direction=\"row\">\r\n                <ClearButton onClick={handleClear}/>\r\n                <ShuffleButton onClick={handleShuffle}/>\r\n            </Stack>\r\n            <ItemInput onEnter={handleAdd}/>\r\n            <List list={list} onClick={handleRemove}/>\r\n            <PickedItem item={picked ? picked : \"PICK\"} onClick={handlePick}/>\r\n            <HowTo content={(\r\n                <div>\r\n                    <Typography>\r\n                        Enter an item in the <b>New item</b> field and press <b>Enter</b> to add it to the list.\r\n                    </Typography>\r\n                    <Typography>\r\n                        Click on the <b>PICK</b> button to pick a random item from the list.\r\n                    </Typography>\r\n                    <Typography>\r\n                        Click on the <b>SHUFFLE</b> button to shuffle the list.\r\n                    </Typography>\r\n                    <Typography>\r\n                        Click on the <b>CLEAR</b> button to clear the list.\r\n                    </Typography>\r\n                </div>\r\n            )}/>\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default RandomPicker;","import './App.css';\r\nimport React from 'react';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from \"@mui/material/Container\";\r\nimport {Accordion, AccordionDetails, AccordionSummary} from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport HomeRepairServiceIcon from '@mui/icons-material/HomeRepairService';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {ThemeProvider, createTheme} from '@mui/material/styles';\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Encrypt from './tools/encrypt';\r\nimport RickRoll from './tools/rickroll';\r\nimport RandomPicker from \"./tools/random-picker\";\r\n\r\n\r\nfunction App() {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    // use this to add a new tool\r\n    function makeTool(tool, id, title) {\r\n        return (\r\n            <Accordion\r\n                key={id}\r\n                TransitionProps={{unmountOnExit: true}}\r\n                expanded={expanded === id}\r\n                onChange={handleChange(id)}\r\n            >\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon/>}\r\n                    aria-controls={`${id}-content`}\r\n                    id={`${id}-header`}\r\n                >\r\n                    <Typography variant=\"h6\">{title}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    {tool}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        )\r\n    }\r\n\r\n    const [mode, setMode] = React.useState('light');\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: mode,\r\n        },\r\n    });\r\n\r\n    const toggleColorMode = () => {\r\n        setMode(mode === 'light' ? 'dark' : 'light');\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Paper style={{minHeight: \"100vh\"}}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <HomeRepairServiceIcon sx={{mr: 1}}/>\r\n                        <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}>\r\n                            Simple Toolbox\r\n                        </Typography>\r\n                        <Typography>\r\n                            {theme.palette.mode}\r\n                        </Typography>\r\n                        <IconButton sx={{ml: 1}} onClick={toggleColorMode} color=\"inherit\">\r\n                            {theme.palette.mode === 'dark' ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Container sx={{mt: 2}}>\r\n                    {makeTool(<Encrypt/>, 'encrypt', 'Encrypt')}\r\n                    {makeTool(<RandomPicker/>, 'random-picker', 'Random Picker')}\r\n                    {/* add your new tools here, right above the Rick Roll :) */}\r\n                    {makeTool(<RickRoll/>, 'rickroll', \"Don't open this\")}\r\n                </Container>\r\n            </Paper>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}